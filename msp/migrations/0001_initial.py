# Generated by Django 5.1.1 on 2024-10-31 14:43

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('v', 'Vendor'), ('c', 'Customer'), ('o', 'Other')], max_length=10)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100, unique=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('is_active', models.BooleanField(default=True)),
                ('bill_street', models.CharField(max_length=100)),
                ('bill_pobox', models.CharField(max_length=100)),
                ('bill_city', models.CharField(max_length=60)),
                ('bill_state', models.CharField(max_length=2)),
                ('bill_zip', models.PositiveIntegerField()),
                ('main_phone', models.CharField(blank=True, max_length=15)),
                ('main_email', models.EmailField(blank=True, max_length=254)),
                ('ap_email', models.EmailField(blank=True, max_length=254)),
                ('fax', models.CharField(blank=True, max_length=15)),
                ('website', models.URLField(blank=True)),
                ('credit_limit', models.PositiveIntegerField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salesrep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('tax_percent', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('net_due', models.PositiveSmallIntegerField()),
                ('discount_percent', models.PositiveSmallIntegerField()),
                ('discount_days', models.PositiveSmallIntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('account_type', models.CharField(max_length=50)),
                ('account_name', models.CharField(max_length=100, unique=True)),
                ('account_desc', models.TextField(blank=True)),
                ('parent_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account_subaccounts', to='msp.account')),
            ],
        ),
        migrations.CreateModel(
            name='ContractHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('begin_effective_date', models.DateField(default=django.utils.timezone.now)),
                ('end_effective_date', models.DateField(blank=True, null=True)),
                ('reference_number', models.CharField(max_length=50, unique=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contract_head_customer', to='msp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('location_name', models.CharField(max_length=100, unique=True)),
                ('street', models.CharField(max_length=100)),
                ('pobox', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.PositiveIntegerField()),
                ('delivery_open', models.TimeField()),
                ('delivery_close', models.TimeField()),
                ('is_boxtruck_able', models.BooleanField(default=True)),
                ('is_trailer_able', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('contact_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_location_contact_email', to='msp.contact')),
                ('contact_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_location_contact_name', to='msp.contact')),
                ('contact_phone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_location_contact_phone', to='msp.contact')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='msp.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='csr',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_csr', to='msp.employee'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100, unique=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('is_active', models.BooleanField(default=True)),
                ('item_type', models.CharField(choices=[('i', 'Inventory'), ('n', 'Non-Inventory')], max_length=30)),
                ('revision', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('division', models.CharField(choices=[('corrugated', 'Corrugated'), ('packaging', 'Packaging'), ('tooling', 'Tooling'), ('janitorial', 'Janitorial'), ('misc', 'Miscellaneous')], max_length=30)),
                ('purch_desc', models.TextField(verbose_name='Purchase Description')),
                ('sell_desc', models.TextField(verbose_name='Sell Description')),
                ('category', models.CharField(choices=[('5pf', '5PF'), ('angleboard', 'Angleboard'), ('bag', 'Bag'), ('bubble', 'Bubble'), ('chip', 'Chip'), ('chip_ptn', 'Chip Partition'), ('circle', 'Circle'), ('cup', 'Cup'), ('dc', 'D/C'), ('dcrsc', 'D/C RSC'), ('film', 'Film'), ('foam', 'Foam'), ('fol', 'FOL'), ('gloves', 'Gloves'), ('hsc', 'HSC'), ('label', 'Label'), ('litho', 'Litho'), ('misc', 'Miscellaneous'), ('other', 'Other'), ('pad', 'Pad'), ('parchwax', 'Parchment/Wax'), ('plastic_tray', 'Plastic Tray'), ('print', 'Print Plate'), ('ptn', 'Partition'), ('rsc', 'RSC'), ('sheet', 'Sheet'), ('sleeve', 'Sleeve'), ('slug', 'Slug'), ('ssc', 'SSC'), ('steel', 'Steel Die'), ('strapping', 'Strapping'), ('stretch', 'Stretch'), ('tape', 'Tape'), ('tele', 'Tele'), ('tray', 'Tray'), ('tube', 'Tube'), ('urn', 'Urn')], max_length=30)),
                ('test', models.CharField(choices=[('5pf', '5PF'), ('angleboard', 'Angleboard'), ('bag', 'Bag'), ('bubble', 'Bubble'), ('chip', 'Chip'), ('chip_ptn', 'Chip Partition'), ('circle', 'Circle'), ('cup', 'Cup'), ('dc', 'D/C'), ('dcrsc', 'D/C RSC'), ('film', 'Film'), ('foam', 'Foam'), ('fol', 'FOL'), ('gloves', 'Gloves'), ('hsc', 'HSC'), ('label', 'Label'), ('litho', 'Litho'), ('misc', 'Miscellaneous'), ('other', 'Other'), ('pad', 'Pad'), ('parchwax', 'Parchment/Wax'), ('plastic_tray', 'Plastic Tray'), ('print', 'Print Plate'), ('ptn', 'Partition'), ('rsc', 'RSC'), ('sheet', 'Sheet'), ('sleeve', 'Sleeve'), ('slug', 'Slug'), ('ssc', 'SSC'), ('steel', 'Steel Die'), ('strapping', 'Strapping'), ('stretch', 'Stretch'), ('tape', 'Tape'), ('tele', 'Tele'), ('tray', 'Tray'), ('tube', 'Tube'), ('urn', 'Urn')], max_length=15)),
                ('flute', models.CharField(max_length=6)),
                ('paper', models.CharField(max_length=4)),
                ('is_printed', models.BooleanField(default=False)),
                ('panels_ptd', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('colors_ptd', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('ink_list', models.TextField()),
                ('dim1', models.DecimalField(decimal_places=4, max_digits=10)),
                ('dim2', models.DecimalField(decimal_places=4, max_digits=10)),
                ('dim3', models.DecimalField(decimal_places=4, max_digits=10)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('is_taxable', models.BooleanField(default=False)),
                ('asset_acct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_asset_account', to='msp.account')),
                ('cogs_acct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_cogs_account', to='msp.account')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_customer', to='msp.customer')),
                ('sale_acct', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_sales_account', to='msp.account')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_tax', to='msp.tax')),
            ],
        ),
        migrations.CreateModel(
            name='ContractLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_release_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('purchased_quantity', models.PositiveIntegerField(default=0)),
                ('received_quantity', models.PositiveIntegerField(default=0)),
                ('sold_quantity', models.PositiveIntegerField(default=0)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_items', to='msp.contracthead')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='msp.item')),
            ],
        ),
        migrations.CreateModel(
            name='PriceListHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('begin_effective_date', models.DateField(default=django.utils.timezone.now)),
                ('end_effective_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_list_head_customer', to='msp.customer')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_list_head_item', to='msp.item')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('number', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('d', 'Drop Ship'), ('w', 'Warehouse'), ('c', 'Crossdock')], max_length=30)),
                ('requested_date', models.DateField()),
                ('vendor_due_date', models.DateField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_buyer', to='msp.purchasehead')),
                ('csr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_csr', to='msp.employee')),
                ('ship_to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_to_city', to='msp.customerlocation')),
                ('ship_to_pobox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_to_pobox', to='msp.customerlocation')),
                ('ship_to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_to_state', to='msp.customerlocation')),
                ('ship_to_street', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_to_street', to='msp.customerlocation')),
                ('ship_to_zip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_to_zip', to='msp.customerlocation')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('number', models.CharField(max_length=50, unique=True)),
                ('customer_order_number', models.CharField(blank=True, max_length=50)),
                ('requested_date', models.DateField()),
                ('ship_date', models.DateField()),
                ('priority', models.PositiveIntegerField(default=0)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('bill_to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_bill_to_city', to='msp.customer')),
                ('bill_to_pobox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_bill_to_pobox', to='msp.customer')),
                ('bill_to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_bill_to_state', to='msp.customer')),
                ('bill_to_street', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_bill_to_street', to='msp.customer')),
                ('bill_to_zip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_bill_to_zip', to='msp.customer')),
                ('csr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='release_head_csr', to='msp.employee')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_customer', to='msp.customer')),
                ('ship_to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_ship_to_city', to='msp.customerlocation')),
                ('ship_to_pobox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_ship_to_pobox', to='msp.customerlocation')),
                ('ship_to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_ship_to_state', to='msp.customerlocation')),
                ('ship_to_street', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_ship_to_street', to='msp.customerlocation')),
                ('ship_to_zip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_ship_to_zip', to='msp.customerlocation')),
                ('terms', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_terms', to='msp.customer')),
                ('sales_rep', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='release_head_sales_rep', to='msp.salesrep')),
            ],
            options={
                'ordering': ['date_created', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='DropShipHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('number', models.CharField(max_length=50, unique=True)),
                ('customer_order_number', models.CharField(blank=True, max_length=50)),
                ('requested_date', models.DateField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('bill_to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_bill_to_city', to='msp.customer')),
                ('bill_to_pobox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_bill_to_pobox', to='msp.customer')),
                ('bill_to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_bill_to_state', to='msp.customer')),
                ('bill_to_street', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_bill_to_street', to='msp.customer')),
                ('bill_to_zip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_bill_to_zip', to='msp.customer')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_customer', to='msp.customer')),
                ('ship_to_city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_to_city', to='msp.customerlocation')),
                ('ship_to_pobox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_to_pobox', to='msp.customerlocation')),
                ('ship_to_state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_to_state', to='msp.customerlocation')),
                ('ship_to_street', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_to_street', to='msp.customerlocation')),
                ('ship_to_zip', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_to_zip', to='msp.customerlocation')),
                ('terms', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_terms', to='msp.customer')),
                ('csr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_csr', to='msp.employee')),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_buyer', to='msp.purchasehead')),
                ('ms_po_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_ship_head_ms_po_number', to='msp.purchasehead')),
                ('ship_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from', to='msp.purchasehead')),
                ('vendor_due_date', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drop_ship_head_vendor_due_date', to='msp.purchasehead')),
                ('sales_rep', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_sales_rep', to='msp.salesrep')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='sales_rep',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='msp.salesrep'),
        ),
        migrations.CreateModel(
            name='ReleaseLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='msp.item')),
                ('release_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='release_lines', to='msp.releasehead')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='release_line_tax', to='msp.tax')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='msp.contracthead')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='msp.item')),
                ('purchase_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_lines', to='msp.purchasehead')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchase_line_tax', to='msp.tax')),
            ],
        ),
        migrations.CreateModel(
            name='DropShipLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='msp.contracthead')),
                ('dropship_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_lines', to='msp.dropshiphead')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='msp.item')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='msp.tax')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='tax_code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_tax_code', to='msp.tax'),
        ),
        migrations.AddField(
            model_name='customer',
            name='terms',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_terms', to='msp.terms'),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=100, unique=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('is_active', models.BooleanField(default=True)),
                ('bill_street', models.CharField(blank=True, max_length=100)),
                ('bill_pobox', models.CharField(blank=True, max_length=100)),
                ('bill_city', models.CharField(blank=True, max_length=60)),
                ('bill_state', models.CharField(blank=True, max_length=2)),
                ('bill_zip', models.PositiveIntegerField(blank=True)),
                ('main_phone', models.CharField(blank=True, max_length=15)),
                ('main_email', models.EmailField(blank=True, max_length=254)),
                ('ar_email', models.EmailField(blank=True, max_length=254)),
                ('fax', models.CharField(blank=True, max_length=15)),
                ('website', models.URLField(blank=True)),
                ('credit_limit', models.PositiveIntegerField()),
                ('check_name', models.CharField(blank=True, max_length=150)),
                ('tax_id', models.CharField(blank=True, max_length=20)),
                ('is_1099', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='attachments/')),
                ('terms', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_terms', to='msp.terms')),
            ],
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='bill_from_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_bill_from_city', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='bill_from_pobox',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_bill_from_pobox', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='bill_from_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_bill_from_state', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='bill_from_street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_bill_from_street', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='bill_from_zip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_bill_from_zip', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='terms',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_terms', to='msp.vendor'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='msp.vendor'),
        ),
        migrations.CreateModel(
            name='CostListHead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('begin_effective_date', models.DateField(default=django.utils.timezone.now)),
                ('end_effective_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_list_head_item', to='msp.item')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_list_head_vendor', to='msp.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('location_name', models.CharField(max_length=100, unique=True)),
                ('street', models.CharField(max_length=100)),
                ('pobox', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('contact_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_location_contact_email', to='msp.contact')),
                ('contact_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_location_contact_name', to='msp.contact')),
                ('contact_phone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_location_contact_phone', to='msp.contact')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='msp.customer')),
            ],
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_location_name', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_from_city', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from_pobox',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_from_pobox', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_from_state', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from_street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_from_street', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='purchasehead',
            name='ship_from_zip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchase_head_ship_from_zip', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='dropshiphead',
            name='ship_from_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from_city', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='dropshiphead',
            name='ship_from_pobox',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from_pobox', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='dropshiphead',
            name='ship_from_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from_state', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='dropshiphead',
            name='ship_from_street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from_street', to='msp.vendorlocation'),
        ),
        migrations.AddField(
            model_name='dropshiphead',
            name='ship_from_zip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='drop_ship_head_ship_from_zip', to='msp.vendorlocation'),
        ),
        migrations.CreateModel(
            name='CostListLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Minimum quantity for this cost to apply')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_list_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cost_lines', to='msp.costlisthead')),
            ],
            options={
                'ordering': ['quantity'],
                'unique_together': {('cost_list_head', 'quantity')},
            },
        ),
        migrations.CreateModel(
            name='PriceListLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Minimum quantity for this price to apply')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_list_head', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_lines', to='msp.pricelisthead')),
            ],
            options={
                'ordering': ['quantity'],
                'unique_together': {('price_list_head', 'quantity')},
            },
        ),
    ]
